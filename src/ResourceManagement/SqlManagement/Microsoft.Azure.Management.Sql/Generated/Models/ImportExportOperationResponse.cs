// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Sql.Models
{
    using Azure;
    using Management;
    using Sql;
    using Rest;
    using Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Response for Import/Export Get operation.
    /// </summary>
    [JsonTransformation]
    public partial class ImportExportOperationResponse
    {
        /// <summary>
        /// Initializes a new instance of the ImportExportOperationResponse
        /// class.
        /// </summary>
        public ImportExportOperationResponse() { }

        /// <summary>
        /// Initializes a new instance of the ImportExportOperationResponse
        /// class.
        /// </summary>
        /// <param name="id">The id returned from the server.</param>
        /// <param name="name">The name returned from the server.</param>
        /// <param name="type">The type returned from the server.</param>
        /// <param name="requestType">The request type of the
        /// operation.</param>
        /// <param name="requestId">The request type of the operation.</param>
        /// <param name="serverName">The name of the server.</param>
        /// <param name="databaseName">The name of the database.</param>
        /// <param name="status">The status message returned from the
        /// server.</param>
        /// <param name="lastModifiedTime">The operation status last modified
        /// time.</param>
        /// <param name="queuedTime">The operation queued time.</param>
        /// <param name="blobUri">The blob uri.</param>
        /// <param name="errorMessage">The error message returned from the
        /// server.</param>
        public ImportExportOperationResponse(string id = default(string), string name = default(string), string type = default(string), string requestType = default(string), System.Guid? requestId = default(System.Guid?), string serverName = default(string), string databaseName = default(string), string status = default(string), string lastModifiedTime = default(string), string queuedTime = default(string), string blobUri = default(string), string errorMessage = default(string))
        {
            Id = id;
            Name = name;
            Type = type;
            RequestType = requestType;
            RequestId = requestId;
            ServerName = serverName;
            DatabaseName = databaseName;
            Status = status;
            LastModifiedTime = lastModifiedTime;
            QueuedTime = queuedTime;
            BlobUri = blobUri;
            ErrorMessage = errorMessage;
        }

        /// <summary>
        /// Gets the id returned from the server.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; protected set; }

        /// <summary>
        /// Gets the name returned from the server.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; protected set; }

        /// <summary>
        /// Gets the type returned from the server.
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; protected set; }

        /// <summary>
        /// Gets the request type of the operation.
        /// </summary>
        [JsonProperty(PropertyName = "properties.requestType")]
        public string RequestType { get; protected set; }

        /// <summary>
        /// Gets the request type of the operation.
        /// </summary>
        [JsonProperty(PropertyName = "properties.requestId")]
        public System.Guid? RequestId { get; protected set; }

        /// <summary>
        /// Gets the name of the server.
        /// </summary>
        [JsonProperty(PropertyName = "properties.serverName")]
        public string ServerName { get; protected set; }

        /// <summary>
        /// Gets the name of the database.
        /// </summary>
        [JsonProperty(PropertyName = "properties.databaseName")]
        public string DatabaseName { get; protected set; }

        /// <summary>
        /// Gets the status message returned from the server.
        /// </summary>
        [JsonProperty(PropertyName = "properties.status")]
        public string Status { get; protected set; }

        /// <summary>
        /// Gets the operation status last modified time.
        /// </summary>
        [JsonProperty(PropertyName = "properties.lastModifiedTime")]
        public string LastModifiedTime { get; protected set; }

        /// <summary>
        /// Gets the operation queued time.
        /// </summary>
        [JsonProperty(PropertyName = "properties.queuedTime")]
        public string QueuedTime { get; protected set; }

        /// <summary>
        /// Gets the blob uri.
        /// </summary>
        [JsonProperty(PropertyName = "properties.blobUri")]
        public string BlobUri { get; protected set; }

        /// <summary>
        /// Gets the error message returned from the server.
        /// </summary>
        [JsonProperty(PropertyName = "properties.errorMessage")]
        public string ErrorMessage { get; protected set; }

    }
}

